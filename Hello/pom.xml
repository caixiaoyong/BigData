<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!--公司域名倒叙+项目名、模块名、版本-->
    <groupId>com.atguigu.maven</groupId>
    <artifactId>Hello</artifactId>
    <version>1.0-SNAPSHOT</version>
    <!--父工程的打包方式设置为pom-->
    <packaging>pom</packaging>

    <!--
      依赖配置：
            目前这里的配置的依赖所引入的jar包在此工程下的所有子工程都会被引入
    -->
    <dependencies>
        <dependency>
            <!--这个jar所处的本地仓库位置-->
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.0</version>

            <!--main目录下的Java代码不能访问这个范围的依赖,所以Hello类无法使用单元测试-->
            <scope>test</scope>
        </dependency>
    </dependencies>

    <!--依赖管理：
    这里的配置的依赖只是对依赖版本的管理配置，子工程并不会直接引入
             如果子工程要需要引入只需要加入如下标签：
              <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
              </dependency>
             这样就可以引入mysql的驱动了，这样的好处就是可以在父工程统一一下整个工程的jar包依赖版本
             而且如果有的工程不需要一些jar就可以不进行引入
    -->

    <dependencyManagement>
        <!--使用依赖的方式-->
        <dependencies>
            <!--单个依赖-->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.0</version>

                <!--main目录下的Java代码不能访问这个范围的依赖,所以Hello类无法使用单元测试-->
                <scope>compile</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <!--将项目所依赖的jar包 一并打入到jar中的插件-->
 <!--   <build>
        <plugins>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>-->

</project>